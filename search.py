import json  
import re
import os
import streamlit as st


def search_it(given_dict,search_word,number,the_title,ref_to):
    for key in given_dict:
        if pattern.search(key):
            info    = given_dict.get(key)
            number +=1
            st.write('')
            st.write('')
            st.markdown(f'<Big><b>{number}&nbsp;&nbsp;&nbsp;{the_title}</b></Big>',unsafe_allow_html=True, help=f'{item.get("explanation")}')
            mod_key = re.compile(search_word).sub(f'<font color="#BA55D3"><b>{search_word}</b></font>', key)
            st.markdown(f'{mod_key}',unsafe_allow_html=True)   
            st.markdown(f'{given_dict.get(key)}')
            if ref_to != None:
                st.caption(f'{ref_to}')
            st.write('')
        else:
            info = None
    
    if type(given_dict) == dict:
        for key, value in given_dict.items():
            if pattern.search(value):
                info = given_dict.get(key)
                number += 1
                st.write('')
                st.write('')
                st.markdown(f'<Big><b>{number}&nbsp;&nbsp;&nbsp;{the_title}</b></Big>',unsafe_allow_html=True, help=f'{item.get("explanation")}')
                st.write(f'{key}')
                mod_value = re.compile(search_word).sub(f'<font color="#BA55D3"><b>{search_word}</b></font>', value)
                st.markdown(f'{mod_value}', unsafe_allow_html=True)
                if ref_to != None:
                    st.caption(f'{ref_to}')
                st.write('')
            else:
                info = None
    else:
        pass
    return number







st.set_page_config(
    page_title="ChinaDaily Corpus Search",
    page_icon="üìë",
    layout="centered",
    initial_sidebar_state="auto",
    menu_items={
        'About': "# ChinaDaily Corpus Search is an web-based app!"
    }
)


tab1, tab2 = st.tabs(["Daily Hotword", "Soon to arrive..."])


with tab1:
    st.header('Searching in ChinaDaily Hotword Corpus')
    path = os.path.dirname(__file__)
    file_path = path+'/hotwords.json'

    with open(file_path, "r") as f:
        try:
            data = json.load(f)
        except FileNotFoundError:
            st.caption("The 'Parallel Text Corpus' file does not exist")
        except json.JSONDecodeError:
            st.caption("The 'Parallel Text Corpus' file is not a valid JSON file")
        else:
            st.caption("The 'Parallel Text Corpus' has been loaded successfully")
    
    search_word             = st.text_input('search for words like ...','‰∫§ÊµÅ (zh)  /  communication (en)')
    if st.button('search'):
        pattern             = re.compile(search_word)
        number              = 0
        progress_text       = "Operation in progress. Please wait."
        list_sum            = len(data)-1
        my_bar              = st.progress(0, text=progress_text)
        for index,item in enumerate(data):
            my_bar.progress(index/list_sum, text=progress_text)
            titles          = item['title']
            for key,value in titles.items():
                the_title   = f'{key}&nbsp;{value}'
            number          = search_it(titles,search_word,number,the_title,None)
            contence        = item['contence']
            number          = search_it(contence,search_word,number,the_title,None)
            quotations      = item['quotations'].items()
            for element_key ,element_value in quotations:
                number      = search_it(element_value,search_word,number,the_title,element_key)
            related_words   = item['related words']
            number          = search_it(related_words,search_word,number,the_title,None)
        st.toast('Search Finished', icon="ü•û")



    st.write('<br><br><br><center>DISCLAIMER</center>',unsafe_allow_html=True)
    st.write('<center>ACADEMIC PURPOSES ONLY</center>',unsafe_allow_html=True)
    st.write('<center>MATERIAL ALL COMES FROM CHINADAILY OFFICIAL WEBSITE</center>',unsafe_allow_html=True)
    st.write('<center>TEXTS ARE GENERATED BY SCRIPTS</center>',unsafe_allow_html=True)

with tab2:
    st.write('On Waitlist ......')